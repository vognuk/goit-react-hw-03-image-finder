{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/index.jsx","components/ImageGalleryItem/index.jsx","components/ImageGallery/index.jsx","utils/fetchImages.js","components/Modal/index.jsx","components/Button/index.jsx","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","initialValue","handleInputChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","onSubmit","props","trim","toast","error","this","className","s","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","src","alt","largeImageUrl","data-large-url","ImageGalleryItemImage","ImageGallery","onClick","imageList","map","index","webformatURL","largeImageURL","fetchImages","searchQuery","page","searchParams","URLSearchParams","q","per_page","key","fetch","then","response","ok","json","Promise","reject","Error","Modal","document","querySelector","isImageLoading","handleKeyDown","code","onClose","handleBackdropClick","target","onImageLoad","window","addEventListener","removeEventListener","Overlay","color","height","width","onLoad","children","Button","Status","App","status","showModal","currentImgObj","largeUrl","handleFormSubmit","resetPage","handleButtonClick","nextQuery","fetchProcessing","data","hits","length","prevState","catch","message","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","handleGalleryItemClick","dataset","nodeName","prevProps","prevQuery","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2c6b1b15.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3h-Gy\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3wzp3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2-4s3\",\"Modal\":\"Modal_Modal__2RQSE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__nVanu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1CZlN\"};","import { Component } from \"react\";\nimport { ImSearch } from \"react-icons/im\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Searchbar.module.css\";\n\nclass Searchbar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    initialValue: \"\",\n  };\n\n  handleInputChange = (e) => {\n    this.setState({\n      initialValue: e.currentTarget.value.toLowerCase(),\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { initialValue } = this.state;\n    const { onSubmit } = this.props;\n    if (initialValue.trim() === \"\") {\n      toast.error(\"Please enter image name.\");\n      return;\n    }\n    onSubmit(initialValue.trim());\n    this.setState({ initialValue: \"\" });\n  };\n\n  render() {\n    const { initialValue } = this.state;\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <span className={s.SearchFormButtonLabel}>\n              <ImSearch />\n              Search\n            </span>\n          </button>\n\n          <input\n            className={s.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={initialValue}\n            onChange={this.handleInputChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import PropTypes from \"prop-types\";\nimport s from \"./ImageGalleryItem.module.css\";\n\nconst ImageGalleryItem = ({ src, alt, largeImageUrl }) => {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        src={src}\n        alt={alt}\n        data-large-url={largeImageUrl}\n        className={s.ImageGalleryItemImage}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = PropTypes.shape({\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  largeImageUrl: PropTypes.string.isRequired,\n}).isRequired;\n\nexport default ImageGalleryItem;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ImageGallery.module.css\";\nimport ImageGalleryItem from \"../ImageGalleryItem\";\n\nclass ImageGallery extends Component {\n  static propTypes = PropTypes.shape({\n    imageList: PropTypes.array.isRequired,\n    onClick: PropTypes.func.isRequired,\n  }).isRequired;\n\n  render() {\n    const { onClick, imageList } = this.props;\n\n    return (\n      <ul className={s.ImageGallery} onClick={onClick}>\n        {imageList.map(({ webformatURL, type, largeImageURL }, index) => (\n          <ImageGalleryItem\n            key={index}\n            src={webformatURL}\n            alt={type}\n            largeImageUrl={largeImageURL}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default ImageGallery;\n","const API_KEY = \"19206966-979935191003b7da2f180a9ff\";\nconst BASE_URL =\n  \"https://pixabay.com/api/?image_type=photo&orientation=horizontal&\";\n\nconst fetchImages = (searchQuery, page) => {\n  const searchParams = new URLSearchParams({\n    q: searchQuery,\n    page,\n    per_page: 12,\n    key: API_KEY,\n  });\n\n  return fetch(`${BASE_URL}${searchParams}`).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Image ${searchQuery} not found.`));\n  });\n};\n\nexport default fetchImages;\n","import { createPortal } from \"react-dom\";\nimport { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loader from \"react-loader-spinner\";\nimport s from \"./Modal.module.css\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nclass Modal extends Component {\n  static propTypes = PropTypes.shape({\n    src: PropTypes.string,\n    alt: PropTypes.string,\n    onClose: PropTypes.func,\n    children: PropTypes.element,\n  }).isRequired;\n\n  state = {\n    isImageLoading: true,\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n      this.setState({ isImageLoading: true });\n    }\n  };\n\n  handleBackdropClick = (e) => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n      this.setState({ isImageLoading: true });\n    }\n  };\n\n  onImageLoad = () => {\n    this.setState({ isImageLoading: false });\n  };\n\n  render() {\n    const { src, alt } = this.props;\n\n    return (\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\n        <div className={s.Modal}>\n          {this.state.isImageLoading && (\n            <Loader\n              className=\"loader\"\n              type=\"ThreeDots\"\n              color=\"#3f51b5\"\n              height={100}\n              width={100}\n            />\n          )}\n          <img src={src} alt={alt} onLoad={this.onImageLoad} />\n\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import PropTypes from \"prop-types\";\nimport s from \"./Button.module.css\";\n\nconst Button = ({ onClick }) => {\n  return (\n    <button\n      type=\"button\"\n      className={s.Button}\n      onClick={() => {\n        onClick();\n      }}\n    >\n      Load more...\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/\";\nimport fetchImages from \"./utils/fetchImages\";\nimport Modal from \"./components/Modal\";\nimport Button from \"./components/Button/\";\n\nconst Status = {\n  IDLE: \"idle\",\n  PENDING: \"pending\",\n  RESOLVED: \"resolved\",\n  REJECTED: \"rejected\",\n};\n\nexport default class App extends Component {\n  state = {\n    searchQuery: \"\",\n    page: 1,\n    imageList: [],\n    error: \"\",\n    status: Status.IDLE,\n    showModal: false,\n    currentImgObj: {\n      largeUrl: \"\",\n      alt: \"\",\n    },\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n\n    if (prevQuery !== nextQuery) {\n      this.setState({\n        imageList: [],\n        status: Status.PENDING,\n      });\n      this.fetchProcessing(nextQuery);\n    }\n  }\n\n  handleFormSubmit = (searchQuery) => {\n    this.setState({ searchQuery });\n    this.resetPage();\n  };\n\n  handleButtonClick = () => {\n    const nextQuery = this.state.searchQuery;\n    this.setState({ status: Status.PENDING });\n    this.fetchProcessing(nextQuery);\n  };\n\n  fetchProcessing = (nextQuery) => {\n    fetchImages(nextQuery, this.state.page)\n      .then((data) => {\n        if (data.hits.length === 0) {\n          this.setState({ status: Status.IDLE });\n          return toast.error(\"Unfortunately, there is nothing to show...\");\n        }\n        this.setState((prevState) => ({\n          imageList: [...prevState.imageList, ...data.hits],\n          status: Status.RESOLVED,\n        }));\n      })\n      .catch(({ message }) =>\n        this.setState({ error: message, status: Status.REJECTED })\n      )\n      .finally(() => {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n        this.setState((prevState) => ({ page: (prevState.page += 1) }));\n      });\n  };\n\n  resetPage = () => {\n    this.setState({ page: 1 });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  handleGalleryItemClick = (e) => {\n    const largeUrl = e.target.dataset.largeUrl;\n    const alt = e.target.alt;\n    if (e.target.nodeName === \"IMG\") {\n      this.setState({ currentImgObj: { largeUrl, alt } });\n    }\n    this.toggleModal();\n  };\n\n  render() {\n    const { imageList, error, status, showModal, currentImgObj } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        {error && <h1>{error}</h1>}\n        <ImageGallery\n          imageList={imageList}\n          onClick={this.handleGalleryItemClick}\n        />\n        {showModal && (\n          <Modal\n            src={currentImgObj.largeUrl}\n            alt={currentImgObj.alt}\n            onClose={this.toggleModal}\n          ></Modal>\n        )}\n        <div className=\"container\">\n          {status === Status.PENDING && (\n            <Loader\n              className=\"loader\"\n              type=\"ThreeDots\"\n              color=\"#3f51b5\"\n              height={100}\n              width={100}\n            />\n          )}\n          {status === Status.RESOLVED && (\n            <Button onClick={this.handleButtonClick} />\n          )}\n        </div>\n\n        <ToastContainer autoClose={2000} />\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1_tNx\",\"SearchForm\":\"Searchbar_SearchForm__omC2n\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3-WmK\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3gQR7\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1NVIE\"};"],"sourceRoot":""}